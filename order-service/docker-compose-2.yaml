version: "3.8"
services:

  order-service:
    container_name: order-service
    image: order-service:v.0.1
    build: .
    ports:
      - 8094:8094
    depends_on:
      - order-postgres
      - kafka
    environment:
      JAVA_OPTS: -Xmx512m
      ORDER_DB_HOST: order-postgres
      ORDER_DB_NAME: order_db
      ORDER_SERVER_PORT: 8094
      ORDER_DB_USERNAME: order_user
      ORDER_DB_PASS: order_pass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094

  order-consumer:
    container_name: order-consumer
    image: order-service:v.0.1
    build: .
    command: java ${JAVA_OPTS} -cp ./order-service-0.0.1-SNAPSHOT-jar-with-dependencies.jar com.example.order.EventConsumerKt
    depends_on:
      - order-postgres
      - kafka
    environment:
      JAVA_OPTS: -Xmx512m
      ORDER_DB_HOST: order-postgres
      ORDER_DB_NAME: order_db
      ORDER_DB_USERNAME: order_user
      ORDER_DB_PASS: order_pass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094

  order-postgres:
    container_name: order-postgres
    image: postgres:12.3-alpine
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=order_user
      - POSTGRES_PASSWORD=order_pass
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9094,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "OrderEventTopic:1:1,CommonEventTopic:1:1"