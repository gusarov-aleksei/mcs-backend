version: "3"

services:

##Application
  cart-service:
    container_name: cart-service
    image: cart-service:v.0.1
    build: ./cart-service
    ports:
      - 8090:8090
    links:
      - redis:redis-cache
    depends_on:
      - redis
      - catalog-service
      - kafka
    environment:
      JAVA_OPTS: -Xmx512m
      SPRING_REDIS_HOST: redis-cache
      CATALOG_URL: http://catalog-service:8091/api/catalog/
      SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS: kafka:9092

  catalog-service:
    container_name: catalog-service
    image: catalog-service:v.0.1
    build: ./catalog-service
    ports:
      - 8091:8091
    depends_on:
      - redis
    environment:
      JAVA_OPTS: -Xmx512m
      SPRING_REDIS_HOST: redis-cache

  customer-service:
    container_name: customer-service
    image: customer-service:v.0.1
    build: ./customer-service
    ports:
      - 8093:8093
    depends_on:
      - mongo
    environment:
      JAVA_OPTS: -Xmx512m
      CUSTOMER_DB_HOST: mongo-db

##Infrastructure
  redis:
    container_name: redis-cache
    image: redis
    restart: always
    volumes:
      - ./storage/redis/data:/data
    ports:
      - 6379:6379

  mongo:
    container_name: mongo-db
    image: mvertes/alpine-mongo
    restart: always
    volumes:
      - ./storage/mongo/data:/data
    ports:
      - 27017:27017

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  ## tmpfs: "/datalog"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "OrderEventTopic:1:1,CommonEventTopic:1:1"